* 람다식(Lambda expression)
    JDK1.8 이후로 추가된 람다식의 등장으로 또 한 번의 큰 변화가 왔다.
    람다식의 도입으로 인해, 자바는 개체지향언어인 동시에 함수형 언어가 되었다.

    람다식은 간단히 말해서 메서드를 하나의 식으로 표현한 것이다.
    메서드를 람다식으로 표현하면 메서드의 이름과 반환값이 없어지므로, 람다식을 '익명함수' 이라고도 한다.
    ex)
    int [] arr =new int[5];
    Arrays.setAll(arr, (i) -> (int)( Math.random() * 5 )+1 );

    메서드로 표현하면
    int method() {
        return (int)(Math.random()*5) +1;
    }

    모든 메서드는 클래스에 포함되어야 하므로 클래스도 새로 만들어야 하고, 객체도 생성해야만 비로소 이 메서드를 호출할 수 있다.
    람다식은 이 과정없이 오직 람다식 자체만으로도 이 메서드의 역할을 대신할 수 있다.
    게다가 메서드의 매개변수로 전달되어지는 것이 가능하고, 메서드의 결과로 반환될 수도 있다. 람다식으로 인해 메서드를 변수처럼 다루는 것이 가능해진 것이다

* 람다식 작성
    int max(int a, int b){
        return a > b ? a : b;
    }

    람다식은 익명 함수 답게 메서드에서 일므과 반환타입을 제거하고 매개변수 선언부와 몸통{} 사이에 -> 를 추가한다.
    반환값이 있는 메서드의 경우 return문 대신 '식'으로 대신 할 수 있다. 식의 연산결과가 자동적으로 반환값이 된다.
        식이하나면 {} 생략 후 -> ; 생략 해야한다
        매개변수의 타입은 추론이 가능한 경우 생략 가능, 대부분의 경우에 생략한다. 람다식에 반환타입이 없는 이유도 항상 추론이 가능하기 때문
    -> ( a, b) ->  a > b ? a : b


* 함수형 인터페이스(functional interface)
    람다식을 다루기 위한 인터페이스
    함수형 인터페이스에는 오직 하나의 추상 메서드만 정의됭 있어야 한다는 제약이 있다. 그래야 람다식과 인터페이스의 메서드가 1;!로 연결될 수 있기 때문이다.
    반면에 static 메서드와 default메서드의 개수에는 제약이 없다.
    @FunctionalInterface 써주기

    @FunctionalInterface
    interface Myfunction() {
        void myMethod(); // 추상 메서드
    }
    매서드의 매개변수가 Myfunction타입이면, 이 메서드를 호출할 때 람다식을 참조하는 참조변수를 매개변수로 지정해야한다.
    호출 시
       void aMethod (Myfunction f){ // 매개변수의 타입이 함수형 인터페이스
        f.myMethod();   // Myfunction에 정의된 메서드 호출
       }
       ...
       Myfunction f = () => sout~~;
       또는 참조변수 없이
       aMethod(() -> sout~~);
    만약 반환타입이 함수형 인터페이스타입 이라면
    MyFunction myMethod(){
        MyFunction f = () => {};
        return f; // return () -> {}; 가능
    }

* 람다식 형변환
    람다식은 오직 함수형 인터페이스로만 형변환이 가능하다.


* java.util.function
    일반적으로 자주 쓰이는 형식의 메서드를 함수형 인터페이스로 미리 정의해 놓은것이다.
    자바의정석 802p 부터 참고
    매개변수와 반환값의 타입이 지네릭 타입인 함수형 인터페이스 ~ 806p
    기본형 인터페이스 래퍼클래스(wrapper : 기본 자료타입(primitive type)을 객체로 다루기 위해서 사용하는 클래스들을 래퍼 클래스(wrapper class)라고 합니다. )를
    사용해온 것 이 비효율적이라 기본형을 사용하는 함수형 인터페이스 제공 806p ~ 808p
