* 람다식(Lambda expression)
    JDK1.8 이후로 추가된 람다식의 등장으로 또 한 번의 큰 변화가 왔다.
    람다식의 도입으로 인해, 자바는 개체지향언어인 동시에 함수형 언어가 되었다.

    람다식은 간단히 말해서 메서드를 하나의 식으로 표현한 것이다.
    메서드를 람다식으로 표현하면 메서드의 이름과 반환값이 없어지므로, 람다식을 '익명함수' 이라고도 한다.
    ex)
    int [] arr =new int[5];
    Arrays.setAll(arr, (i) -> (int)( Math.random() * 5 )+1 );

    메서드로 표현하면
    int method() {
        return (int)(Math.random()*5) +1;
    }

    모든 메서드는 클래스에 포함되어야 하므로 클래스도 새로 만들어야 하고, 객체도 생성해야만 비로소 이 메서드를 호출할 수 있다.
    람다식은 이 과정없이 오직 람다식 자체만으로도 이 메서드의 역할을 대신할 수 있다.
    게다가 메서드의 매개변수로 전달되어지는 것이 가능하고, 메서드의 결과로 반환될 수도 있다. 람다식으로 인해 메서드를 변수처럼 다루는 것이 가능해진 것이다
