* 애너테이션
    표준 애너테이션 : 자바에서 기본적으로 제공하는 애너테이션들은 몇 개 없다.
    일부는 메타 애너테이션으로 애너테이션을 정의하는데 사용되는 애너테이션이다.

    @Override : 컴파일러에게 오버라이딩하는 메서드라는 것을 알린다.
        메서드 앞에만 붙일 수 있는 애너테이션으로, 조상의 메서드를 오버라이딩하는 것이라는 걸 컴파일러에게 알려주는 역할

    @Deprecate : 앞으로 사용하지 않을 것을 권장하는 대상에 붙인다.

    @SuppressWarnings : 컴파일러의 특정 경고메시지가 나타나지 않게 해준다.
        묵인해야하는 경고가 발생할 때, 주로 묵인하는 것은 "deprecation", "unchecked", "rawtypes", "varargs" 정도이다.
        JDK버전이 올라갈수록 경고메세지는 더 많아질 것 이다. -Xlint옵션으로 컴파일해서 나타나는 경고의 내용 중에서 대괄호[] 안에 있는 것이 바로 경고 메세지 종류이다.
        ex) @SuppressWarnings("unchecked"), 둘 이상 @SuppressWarnings({"unchecked", "deprecation"})

    @SafeVarargs : 지네릭스 타입의 가변인자에 사용한다.
        static이나 final이 붙은 메서드와 생성자에만 붙일 수 있다.
        즉, 오버라이드될 수 있는 메서드에서는 사용할 수 없다.

    @FunctionalInterface : 함수형 인터페이스라는 것을 알린다.
        함수형 인터페이스를 올바르게 선언했는지 확인 함수형 인터페이스를 선언할 때 반드시 사용하자

    @Native : native 메서드에서 참조되는 상수 앞에 붙인다
    (메타애너테이션)*@Target : 애너테이션이 적용가능한 대상을 지정하는데 사용한다.
